import java.util.regex.Matcher
import java.util.regex.Pattern

plugins {
    id 'com.android.application'
    id 'kotlin-android-extensions'
    id 'kotlin-android'
    id 'kotlin-kapt'

}
apply plugin: 'com.google.gms.google-services'


def rootConfiguration = rootProject.ext

android {
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.syed.myapplication"
        minSdkVersion 19
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        buildFeatures {
            dataBinding true
        }
    }
    flavorDimensions "environment"
    productFlavors {
        internal {
            dimension "environment"
            buildConfigField 'String', 'BASE_URL', '"https://jsonplaceholder.typicode.com/"'
        }

        production {
            dimension "environment"
            buildConfigField 'String', 'BASE_URL', '"https://jsonplaceholder.typicode.com/"'
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:${rootConfiguration.appCompatVersion}"
    implementation("com.google.android.material:material:1.2.0-alpha03")
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootConfiguration.refreshLayoutVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${rootConfiguration.constraintLayoutVersion}"
    implementation "com.android.support:multidex:${rootConfiguration.multiDexVersion}"
    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'com.google.firebase:firebase-messaging-ktx:22.0.0'
    testImplementation 'junit:junit:4.+'
    dependencies {
        implementation 'com.google.android.gms:play-services-auth:19.2.0'
    }
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation platform('com.google.firebase:firebase-bom:28.4.0')
    //Api connection********************
    implementation "com.squareup.retrofit2:retrofit:${rootConfiguration.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootConfiguration.retrofitVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootConfiguration.okhttpVersion}"
    implementation "com.squareup.okhttp3:okhttp:${rootConfiguration.okhttpVersion}"

    implementation "com.github.bumptech.glide:glide:${rootConfiguration.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${rootConfiguration.glideVersion}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootConfiguration.kotlin_version}"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootConfiguration.coroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootConfiguration.coroutinesVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootConfiguration.lifeCycleVersion}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootConfiguration.lifeCycleRunTimeVersion}"
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'io.branch.sdk.android:library:5.0.10'
    //map
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'me.zhanghai.android.materialratingbar:library:1.4.0'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation 'com.google.firebase:firebase-analytics'
    implementation platform('com.google.firebase:firebase-bom:30.0.1')
    implementation 'com.karumi:dexter:6.2.1'

}
def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    Pattern pattern
    pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    Matcher matcher = pattern.matcher(tskReqStr)
    if (matcher.find()) {
        return matcher.group(1).toLowerCase()
    } else {
        println "NO MATCH FOUND"
        return ""
    }
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}